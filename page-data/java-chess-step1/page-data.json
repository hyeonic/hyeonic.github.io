{"componentChunkName":"component---src-templates-post-jsx","path":"/java-chess-step1/","result":{"data":{"site":{"siteMetadata":{"title":"나누면 배가 되고"}},"markdownRemark":{"id":"9069b1ac-c0e1-53c5-87c8-417b654a02e8","excerpt":"목표  우아한테크코스에서 진행한 미션의 리뷰와 피드백에 대해 정리한다. 실제 리뷰는 [1, 2, 3단계 - 체스] 매트(최기현) 미션 제출합니다.에서 확인할 수 있다. 07. 1, 2, 3단계 - 체스 리뷰 확인 드디어 레벨 1의 마지막 미션인 체스가 시작 되었다. 체스는 비교적 어려운 요구사항을 가지고 있기 때문에 구현 기능 목록을 정리하는 것도 쉽지 …","html":"<h2>목표</h2>\n<p><img src=\"https://user-images.githubusercontent.com/59357153/152970395-a31c8134-fc89-449f-b4dc-441e03df929c.png\"></p>\n<p>우아한테크코스에서 진행한 미션의 리뷰와 피드백에 대해 정리한다. 실제 리뷰는 <a href=\"https://github.com/woowacourse/java-chess/pull/302\">[1, 2, 3단계 - 체스] 매트(최기현) 미션 제출합니다.</a>에서 확인할 수 있다.</p>\n<h2>07. 1, 2, 3단계 - 체스 리뷰 확인</h2>\n<p>드디어 레벨 1의 마지막 미션인 체스가 시작 되었다. 체스는 비교적 어려운 요구사항을 가지고 있기 때문에 구현 기능 목록을 정리하는 것도 쉽지 않았다. TDD, 객체의 책임 부여 등 지금까지 학습한 내용을 최대한 반영하여 진행하기 위해 노력했다.</p>\n<h2>상태 패턴 도입</h2>\n<p>블랙잭 미션 당시 상태 패턴에 대한 수업은 굉장히 재밌게 다가 왔다. 상태 조차도 객체라는 단위로 나눠서 추상화할 수 있다는 것이 큰 흥미를 이끌었다. 이번 미션에서도 처음 부터 상태 패턴을 고려하여 도입한 것은 아니지만 반복되는 if문 분기를 처리하기 위해서 떠올리게 되었다.</p>\n<p>체스는 여러 가지 상태를 가지고 있다. 게임이 시작되면 White 진영부터 기물을 옮길 수 있다. 측 white turn이 된다. 이제 white와 black으로 번갈아 가며 상태가 변경된다.</p>\n<h3>State</h3>\n<p>필요한 공통 상태를 선언한 인터페이스이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">State</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">State</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">State</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">boolean</span> <span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Result</span> <span class=\"token function\">winner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">ChessBoard</span> <span class=\"token function\">chessBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>해당 인터페이스를 기반으로 적절한 상태를 하위 클래스로 만들어 구현하였다. </p>\n<h3>Ready</h3>\n<p>모든 상태의 시작은 <code class=\"language-text\">Ready</code>로 부터 시작된다. 외부에서 사용할 때 <code class=\"language-text\">중간 상태에서 시작하는 것</code>을 의도적으로 막기 위해서이다. Ready에서는 오직 시작과 관련된 행위만 가능하다. 게임을 시작하게 되면 White 진영 부터 기물을 옮길 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Ready</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Started</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChessBoard</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InitBoardGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">State</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WhiteTurn</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">State</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">State</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">winner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>WhiteTurn과 BlackTurn</h3>\n<p>특정 진영의 턴을 나타내기 위한 상태이다. source 위치의 기물이 해당 진영의 기물인지 확인 한 뒤 이동하여 게임의 종료 여부를 확인 한다. 기물 이동이 정상적으로 진행되면 다른 진영의 턴으로 상태를 변환해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WhiteTurn</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Running</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">WhiteTurn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessBoard</span> chessBoard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">State</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">isTurn</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WHITE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"black 진영의 차례가 아닙니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WhiteWin</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlackTurn</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlackTurn</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Running</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">BlackTurn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessBoard</span> chessBoard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">State</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">isTurn</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BLACK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"white 진영의 차례가 아닙니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlackWin</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WhiteTurn</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>WhiteWin, BlackWin 그리고 End</h3>\n<p>게임이 끝난 것을 나타내기 위한 상태들이다. 기본적으로 <code class=\"language-text\">Finished</code>를 통해 공통적인 행위를 추상화하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Finished</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Started</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Finished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessBoard</span> chessBoard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">State</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">State</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">State</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>끝난 상태 이므로 오직 가능한 행위는 끝났는지 확인하는 것 뿐이다. 다른 행위들은 오작동하지 않도록 모두 예외를 던진다.</p>\n<p>또한 각 진영이 승리하게 되면 winner를 확인할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WhiteWin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Finished</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">WhiteWin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessBoard</span> chessBoard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">winner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WHITE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">End</code>의 경우 외부의 특수한 커맨드로 인해 동작한다. 현재 남아있는 기물들을 판단하여 승패를 결정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">End</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Finished</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">End</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessBoard</span> chessBoard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>chessBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">winner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">double</span> whiteScore <span class=\"token operator\">=</span> chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">calculateScore</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WHITE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> blackScore <span class=\"token operator\">=</span> chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">calculateScore</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BLACK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>whiteScore<span class=\"token punctuation\">,</span> blackScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 작성한 상태는 외부에서 작성한 명령어로 인해 변경된다. 실제 상태를 가진 <code class=\"language-text\">ChessGame</code>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChessGame</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">State</span> state<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ChessGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">score</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ChessBoard</span> chessBoard <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">chessBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">calculateScore</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">winner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Piece</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">board</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ChessBoard</span> chessBoard <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">chessBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Board</span> board <span class=\"token operator\">=</span> chessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">getBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>클라이언트는 약속된 명령어를 통해 상태를 변경시킬 수 있다. 실제 명령을 내리는 부분은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">START</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OutputView</span><span class=\"token punctuation\">.</span><span class=\"token function\">printChessBoard</span><span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">board</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">END</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">MOVE</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"move\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OutputView</span><span class=\"token punctuation\">.</span><span class=\"token function\">printChessBoard</span><span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">board</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">STATUS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">double</span> whiteScore <span class=\"token operator\">=</span> chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">score</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WHITE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> blackScore <span class=\"token operator\">=</span> chessGame<span class=\"token punctuation\">.</span><span class=\"token function\">score</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BLACK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OutputView</span><span class=\"token punctuation\">.</span><span class=\"token function\">printStatusMessage</span><span class=\"token punctuation\">(</span>whiteScore<span class=\"token punctuation\">,</span> blackScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">BiConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChessGame</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> consumer<span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BiConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChessGame</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> consumer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>consumer <span class=\"token operator\">=</span> consumer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Command</span> <span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>command <span class=\"token operator\">-></span> input<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">findFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"존재하지 않는 명령입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChessGame</span> chessGame<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>chessGame<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>특정 명령어를 입력하면 <code class=\"language-text\">BiConsumer</code>를 통해 상태를 변경하도록 메시지를 던진다.</p>\n<h2>비어있는 Piece</h2>\n<p>체스판에는 64칸 중 최대 32칸의 기물을 위치 시킬 수 있다. 체스판은 이차원 리스트를 활용하여 세팅해 두었다.</p>\n<p>그렇기 때문에 기물이 존재하지 않는 칸들을 적절히 처리해주어야 한다. 단순히 <code class=\"language-text\">null</code>을 사용할 수 있지만 특수한 객체를 활용하여 비어있는 칸을 나타내는 Piece를 활용하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EmptyPiece</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Piece</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">EmptyPiece</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PieceType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EMPTY</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NONE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">EmptyPiece</code>는 오직 비어있는지에 대한 유무를 확인할 수 있다.</p>\n<h3>널(Null) 객체 패턴</h3>\n<p>처음 의도는 단순히 null을 사용하는 것 보다 명시적이라고 판단하여 사용하였다. 스터디 중 우연히 널 객체 패턴에 대한 자료를 접한 뒤 EmptyPiece에 적용한 내용과 굉장히 유사하다고 판단하였다.</p>\n<ul>\n<li>null 대신 사용할 클래스를 구현한다. 이 클래스는 <code class=\"language-text\">상위 타입을 상속</code>받으며 아무 기능도 수행하지 않는다.</li>\n<li>null을 리턴하는 대신 null을 대체할 클래스의 객체를 리턴한다.</li>\n</ul>\n<p>이러한 널 객체 패턴은 null 검증을 위한 코드를 없애주며 코드의 가독성을 높여 준다. 또한 null을 사용하지 않기 때문에 의도하지 않은 <code class=\"language-text\">NullPointerException</code>을 피할 수 있다.</p>\n<p>하지만 이러한 널 객체 패턴은 장점만 존재하는 것은 아니다. 널 객체는 실제 객체와 똑같은 모든 메시지에 응답하기 때문에 대부분의 시스템에서 정상적으로 작동할 것이다. 하지만 잘못되서 빠져나오는 부분이 없기 때문에 문제를 감지하거나 찾기 힘들어질 수 있다고 한다.</p>\n<h2>큰 문제를 작은 문제로 나누어 적용하자</h2>\n<p>이번 체스 미션은 유독 요구사항을 파악하고 정리하는 과정이 어렵게 다가 왔다. 특히 복잡한 검증 로직을 동반하기 때문에 특별한 가이드 라인 없이 무에서 유를 창조하는 과정이 가장 힘들었다.</p>\n<p>그 중 나를 가장 많이 괴롭힌 것은 <code class=\"language-text\">Pawn</code>이다. <code class=\"language-text\">Pawn</code>은 진영 별로 이동하기 위한 전략이 다르고 다른 기물을 <code class=\"language-text\">capture</code>하기 위한 조건도 까다롭다. 이것이 미션 내내 나의 발목을 붙잡았다.</p>\n<p>아래는 수정 이전의 Pawn 이동 전략이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlackPawnMovingStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MovingStrategy</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">RANK_INDEX_STARTING_POINT</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Direction</span> <span class=\"token constant\">MOVABLE_DIRECTION</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BOTTOM</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Direction</span><span class=\"token punctuation\">></span></span> <span class=\"token constant\">CAPTURABLE_DIRECTIONS</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BOTTOM_LEFT</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BOTTOM_RIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Piece</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> sourcePosition<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> targetPosition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> rankLength <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> targetPosition<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> fileLength <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">.</span><span class=\"token function\">getFileIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> targetPosition<span class=\"token punctuation\">.</span><span class=\"token function\">getFileIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Direction</span> direction <span class=\"token operator\">=</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">,</span> targetPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> <span class=\"token constant\">MOVABLE_DIRECTION</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isMovableLengthAtMove</span><span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">,</span> rankLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">validateMoveTop</span><span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">,</span> rankLength<span class=\"token punctuation\">,</span> <span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> sourcePosition<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">validateExistPiece</span><span class=\"token punctuation\">(</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> targetPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CAPTURABLE_DIRECTIONS</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isMovableLengthAtCapture</span><span class=\"token punctuation\">(</span>rankLength<span class=\"token punctuation\">,</span> fileLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">validateCapture</span><span class=\"token punctuation\">(</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> targetPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"해당 기물이 갈 수 없는 경로입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isMovableLengthAtMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Position</span> sourcePosition<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rankLength<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> rankLength <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n                <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>sourcePosition<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">RANK_INDEX_STARTING_POINT</span> <span class=\"token operator\">&amp;&amp;</span> rankLength <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateMoveTop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rankLength<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Piece</span> piece<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rankLength <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">RANK_INDEX_STARTING_POINT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">validateExistPiece</span><span class=\"token punctuation\">(</span>piece<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateExistPiece</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Piece</span> piece<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>piece<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"경로에 기물이 존재하여 이동할 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isMovableLengthAtCapture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> rankLength<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fileLength<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> rankLength <span class=\"token operator\">+</span> fileLength <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateCapture</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Piece</span> targetPiece<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">validateEmptyPiece</span><span class=\"token punctuation\">(</span>targetPiece<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">validateSameColor</span><span class=\"token punctuation\">(</span>targetPiece<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateEmptyPiece</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Piece</span> piece<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>piece<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target 위치에 기물이 존재하지 않아 공격할 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateSameColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Piece</span> targetPiece<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetPiece<span class=\"token punctuation\">.</span><span class=\"token function\">isBlack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"공격은 다른 진영만 가능합니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Piece</span> <span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Piece</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> rankIndex <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> fileIndex <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span><span class=\"token function\">getFileIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>rankIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>fileIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이동 전략을 분석하기도 어렵고 가독성 또한 떨어진다. 해당 로직은 수정이 필요하다고 판단했다.</p>\n<p>우선 <code class=\"language-text\">큰 문제</code>를 <code class=\"language-text\">작은 문제</code>로 나눠서 접근하였다. Pawn은 크게 3개의 이동 전략을 가지고 있다.</p>\n<ul>\n<li>Pawn은 시작점에서 1칸 혹은 2칸 이동이 가능하다.</li>\n<li>Pawn은 기본적으로 1칸 이동이 가능하다.</li>\n<li>Pawn은 캡처할 때 대각선 방향이어야 한다.</li>\n</ul>\n<h3>Pawn은 시작점에서 1칸 혹은 2칸 이동이 가능하다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PawnStartingPointMovingStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MovingStrategy</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> startIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Direction</span> direction<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PawnStartingPointMovingStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> startIndex<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Direction</span> direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startIndex <span class=\"token operator\">=</span> startIndex<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> direction<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Direction</span> direction <span class=\"token operator\">=</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">calculateDistance</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> direction\n                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">canMoveTwoPosition</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> distance<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">canMoveOnePosition</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> distance<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMoveTwoPosition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> distance<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Position</span> currentPosition <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Piece</span> currentPiece <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>currentPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        currentPosition <span class=\"token operator\">=</span> currentPosition<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Piece</span> targetPiece <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>currentPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> startIndex\n                <span class=\"token operator\">&amp;&amp;</span> distance <span class=\"token operator\">==</span> <span class=\"token number\">4</span>\n                <span class=\"token operator\">&amp;&amp;</span> currentPiece<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> targetPiece<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMoveOnePosition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> distance<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Piece</span> targetPosition <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">getRankIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> startIndex\n                <span class=\"token operator\">&amp;&amp;</span> distance <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n                <span class=\"token operator\">&amp;&amp;</span> targetPosition<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Pawn은 기본적으로 1칸 이동이 가능하다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PawnDefaultMovingStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MovingStrategy</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Direction</span> direction<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PawnDefaultMovingStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Direction</span> direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> direction<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Direction</span> direction <span class=\"token operator\">=</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">calculateDistance</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> direction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">canMoveOnePosition</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> distance<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMoveOnePosition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> distance<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Piece</span> targetPosition <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> distance <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> targetPosition<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Pawn은 캡처할 때 대각선 방향이어야 한다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PawnCaptureMovingStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MovingStrategy</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Direction</span><span class=\"token punctuation\">></span></span> directions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PawnCaptureMovingStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Direction</span><span class=\"token punctuation\">></span></span> directions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>directions <span class=\"token operator\">=</span> directions<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Direction</span> direction <span class=\"token operator\">=</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> directions<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">calculateDistance</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isCapture</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isCapture</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Piece</span> sourcePiece <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Piece</span> targetPiece <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">findPiece</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>targetPiece<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>sourcePiece<span class=\"token punctuation\">.</span><span class=\"token function\">isSameColor</span><span class=\"token punctuation\">(</span>targetPiece<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>확실히 작은 문제로 접근하고 나니 훨씬 가독성있게 느껴졌다. 이제 해당 전략들을 사용하는 <code class=\"language-text\">Pawn</code>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Pawn</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Piece</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MovingStrategy</span><span class=\"token punctuation\">></span></span> movingStrategies<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateMove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Board</span> board<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Position</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">boolean</span> canMove <span class=\"token operator\">=</span> movingStrategies<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>pawnMovingStrategy <span class=\"token operator\">-></span> pawnMovingStrategy<span class=\"token punctuation\">.</span><span class=\"token function\">canMove</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>canMove<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>핵심은 <code class=\"language-text\">anyMatch</code>이다. 주입된 전략들을 통해 하나라도 이동이 가능하면 예외를 던지지 않고 통과한다.</p>\n<h2>References</h2>\n<p><a href=\"https://johngrib.github.io/wiki/pattern/null-object/\">널 오브젝트 패턴 (Null Object Pattern)</a></p>","frontmatter":{"title":"07. 1, 2, 3단계 - 체스","date":"March 31, 2022","update":"March 31, 2022","tags":["우아한테크코스","미션"],"series":"우아한테크코스 레벨1"},"fields":{"slug":"/java-chess-step1/","readingTime":{"minutes":14.22}}},"seriesList":{"edges":[{"node":{"id":"4725c2e2-e907-5ff3-bef0-faa91dcfe8ef","fields":{"slug":"/java-racing-car-step1/"},"frontmatter":{"title":"01. 1단계 - 자동차 경주 구현"}}},{"node":{"id":"65e96d09-08e4-5540-8744-dab5c29628a4","fields":{"slug":"/java-racing-car-step2/"},"frontmatter":{"title":"02. 2단계 - 자동차 경주 구현"}}},{"node":{"id":"2c1e28dd-599b-58fd-917e-0abefaf110fd","fields":{"slug":"/java-lotto-step1/"},"frontmatter":{"title":"03. 1단계 - 로또(자동)"}}},{"node":{"id":"c8b191aa-f4d7-5a77-a813-97fa5bfb1aa0","fields":{"slug":"/java-lotto-step2/"},"frontmatter":{"title":"04. 2단계 - 로또(수동)"}}},{"node":{"id":"6754ea3c-f1a8-591b-8995-96269d524c88","fields":{"slug":"/java-blackjack-step1/"},"frontmatter":{"title":"05. 1단계 - 블랙잭"}}},{"node":{"id":"bb44264a-c6e4-5f39-abb1-f8cc54778430","fields":{"slug":"/java-blackjack-step2/"},"frontmatter":{"title":"06. 2단계 - 블랙잭(베팅)"}}},{"node":{"id":"9069b1ac-c0e1-53c5-87c8-417b654a02e8","fields":{"slug":"/java-chess-step1/"},"frontmatter":{"title":"07. 1, 2, 3단계 - 체스"}}},{"node":{"id":"0b7ba85e-6e63-5679-a514-d1a84734d181","fields":{"slug":"/java-chess-step2/"},"frontmatter":{"title":"08. 4, 5단계 - 체스"}}}]},"previous":{"fields":{"slug":"/java-blackjack-step2/"},"frontmatter":{"title":"06. 2단계 - 블랙잭(베팅)"}},"next":{"fields":{"slug":"/immutable-object/"},"frontmatter":{"title":"불변 객체"}}},"pageContext":{"id":"9069b1ac-c0e1-53c5-87c8-417b654a02e8","series":"우아한테크코스 레벨1","previousPostId":"bb44264a-c6e4-5f39-abb1-f8cc54778430","nextPostId":"984809e6-d465-5dfd-9c59-579d12581fac"}},"staticQueryHashes":[],"slicesMap":{}}