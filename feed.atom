<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hyeonic.github.io</id>
    <title>Î∞∞ÏõÄÏùÑ Í∏∞Î°ù</title>
    <updated>2023-03-08T13:35:55.097Z</updated>
    <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
    <link rel="alternate" href="https://hyeonic.github.io"/>
    <link rel="self" href="https://hyeonic.github.io/feed.atom"/>
    <subtitle>Î∞∞ÏõÄÏùÑ Í∏∞Î°ùÌïòÍ∏∞ ÏúÑÌïú Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§.</subtitle>
    <entry>
        <title type="html"><![CDATA[Ï°∞Í∏à Îä¶ÏùÄ 2022ÎÖÑ ÌöåÍ≥†]]></title>
        <id>https://hyeonic.github.io/retrospect/2022-retrospect.html</id>
        <link href="https://hyeonic.github.io/retrospect/2022-retrospect.html">
        </link>
        <updated>2023-01-12T21:00:00.000Z</updated>
        <summary type="html"><![CDATA[2022ÎÖÑÏùÄ ÎÇ¥Í≤å Ï°∞Í∏àÏùÄ ÌäπÎ≥ÑÌïú Ìï¥Ïù¥Îã§. Îã®ÏàúÌûà Í∏∞Ïà†Ï†ÅÏù∏ ÏÑ±Ïû•ÏùÑ ÎÑòÏñ¥ Ìïú ÏÇ¨ÎûåÏúºÎ°úÏÑúÏùò Í∞ÄÏπòÍ¥ÄÏùÑ ÌòïÏÑ±Ìï† Ïàò ÏûàÏóàÎçò ÏãúÍ∏∞ÏòÄÎã§. ÌöåÍ≥†Î•º ÌÜµÌï¥ ÏßÄÎÇú 1ÎÖÑÏùÑ Îí§ÎèåÏïÑÎ≥¥Î©∞ Ï†êÍ≤ÄÌï† Ïàò ÏûàÎäî ÌöåÍ≥†Î•º Ï†ÅÏñ¥Î≥¥Î†§ ÌïúÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (5)]]></title>
        <id>https://hyeonic.github.io/spring/concurrency/concurrency-5.html</id>
        <link href="https://hyeonic.github.io/spring/concurrency/concurrency-5.html">
        </link>
        <updated>2022-12-14T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (2) - Pessimistic Lock
> üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (3) - Optimistic Lock
> üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (4) - Named Lock
> üëâ üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (5) - Spinlock]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (4)]]></title>
        <id>https://hyeonic.github.io/spring/concurrency/concurrency-4.html</id>
        <link href="https://hyeonic.github.io/spring/concurrency/concurrency-4.html">
        </link>
        <updated>2022-12-14T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[ÎÑ§ÏûÑÎìú ÎùΩÏùÄ GET_LOCK() Ìï®ÏàòÎ•º ÌôúÏö©ÌïòÏó¨ ÏûÑÏùòÏùò Î¨∏ÏûêÏó¥Ïóê ÎåÄÌïú Ïû†Í∏àÏùÑ ÏÑ§Ï†ïÌï† Ïàò ÏûàÎã§. Îã®ÏàúÌûà ÏÇ¨Ïö©ÏûêÍ∞Ä ÏßÄÏ†ïÌïú Î¨∏ÏûêÏó¥Ïóê ÎåÄÌïú ÎùΩÏùÑ ÌöçÎìùÌïòÍ≥† Î∞òÎÇ©ÌïúÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (3)]]></title>
        <id>https://hyeonic.github.io/spring/concurrency/concurrency-3.html</id>
        <link href="https://hyeonic.github.io/spring/concurrency/concurrency-3.html">
        </link>
        <updated>2022-12-13T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[Ïù¥Ï†êÏù¥ ÎßéÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (2)]]></title>
        <id>https://hyeonic.github.io/spring/concurrency/concurrency-2.html</id>
        <link href="https://hyeonic.github.io/spring/concurrency/concurrency-2.html">
        </link>
        <updated>2022-12-12T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[ÏòàÏ†ú ÏΩîÎìúÎäî Ïù¥Ï†ÑÏóê synchronizedÎ•º ÌôúÏö©Ìïú ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÏóêÏÑú ÏÇ¨Ïö©Ìïú Product ÏóîÌã∞Ìã∞Î•º Ïû¨ÏÇ¨Ïö©Ìï† Í≤ÉÏù¥Îã§. Ï∂îÍ∞ÄÎêú Î∂ÄÎ∂ÑÏùÄ x-lockÏùÑ Í±¥ Îí§ Ï°∞ÌöåÌïòÎäî Î©îÏÑúÎìúÍ∞Ä Ï∂îÍ∞Ä ÎêòÏóàÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[üöó Ï∞®Í∑ºÏ∞®Í∑º ÎèôÏãúÏÑ± Ïù¥Ïäà Ìï¥Í≤∞ÌïòÍ∏∞ (1)]]></title>
        <id>https://hyeonic.github.io/spring/concurrency/concurrency-1.html</id>
        <link href="https://hyeonic.github.io/spring/concurrency/concurrency-1.html">
        </link>
        <updated>2022-12-11T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[Î®ºÏ†Ä Ïù¥Î≤à Í∏ÄÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÏòàÏ†ú ÏΩîÎìúÎ•º ÏÇ¥Ìé¥Î≥¥Ïûê. ÏïÑÎûòÎäî ÌäπÏ†ï ÏÉÅÌíàÏùÑ ÎÇòÌÉÄÎÇ¥Í∏∞ ÏúÑÌïú Product ÏóîÌã∞Ìã∞Ïù¥Îã§. ProductÎäî Ïù¥Î¶ÑÍ≥º ÌïúÏ†ïÎêú Í∞úÏàòÎ•º ÎÇòÌÉÄÎÇ¥Îäî quantityÎ•º Í∞ÄÏßÄÍ≥† ÏûàÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Î¨∏ÏûêÏó¥ ÏÉùÏÑ± Î∞©Ïãù ÎπÑÍµêÌïòÍ∏∞]]></title>
        <id>https://hyeonic.github.io/java/basic/java-string.html</id>
        <link href="https://hyeonic.github.io/java/basic/java-string.html">
        </link>
        <updated>2022-12-10T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[}
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ïä§ÌîÑÎßÅÏù¥ Í∞úÏÑ†Ìïú Ìä∏ÎûúÏû≠ÏÖò (2)]]></title>
        <id>https://hyeonic.github.io/spring/db/spring-transaction-2.html</id>
        <link href="https://hyeonic.github.io/spring/db/spring-transaction-2.html">
        </link>
        <updated>2022-12-10T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[public class TransactionTemplate extends DefaultTransactionDefinition
        implements TransactionOperations, InitializingBean {
    // ...
    public  T execute(TransactionCallback action) throws TransactionException {
        // ...
        T result;
        try {
            result = action.doInTransaction(status);
        } catch (RuntimeException | Error ex) {
            // Transactional code threw application exception -> rollback
            rollbackOnException(status, ex);
            throw ex;
            // ...
            this.transactionManager.commit(status);
            return result;
        }
        // ...
    }
    // ...
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ïä§ÌîÑÎßÅÏù¥ Í∞úÏÑ†Ìïú Ìä∏ÎûúÏû≠ÏÖò (1)]]></title>
        <id>https://hyeonic.github.io/spring/db/spring-transaction-1.html</id>
        <link href="https://hyeonic.github.io/spring/db/spring-transaction-1.html">
        </link>
        <updated>2022-12-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[new Account(account.getId(), account.getHolder(), account.getAmount() - amount));
            connection.commit();
        } catch (final SQLException e) {
            connection.rollback();
            throw new RuntimeException(e);
        }
    }
    // ...
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[ÎÇôÍ¥ÄÏ†Å ÎùΩÍ≥º ÎèôÏãúÏÑ± ÌÖåÏä§Ìä∏]]></title>
        <id>https://hyeonic.github.io/jpa/basic/optimistic-locking.html</id>
        <link href="https://hyeonic.github.io/jpa/basic/optimistic-locking.html">
        </link>
        <updated>2022-12-03T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[SimpleJpaRepositoryÏùò save()Îäî Ïñ¥ÎñªÍ≤å ÏÉàÎ°úÏö¥ ÏóîÌã∞Ìã∞Î•º ÌåêÎã®Ìï†Íπå?]]></title>
        <id>https://hyeonic.github.io/jpa/basic/save-persist-merge.html</id>
        <link href="https://hyeonic.github.io/jpa/basic/save-persist-merge.html">
        </link>
        <updated>2022-11-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Í∑∏Î†áÎã§Î©¥ isNew()Îäî Ïñ¥ÎñªÍ≤å ÏÉàÎ°úÏö¥ entityÏù∏ÏßÄ ÌôïÏù∏Ìï†Íπå? Íµ¨ÌòÑ ÏΩîÎìúÎ•º ÏÇ¥Ìé¥Î≥¥Ïûê.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[HikariCPÏôÄ Ï†ÅÏ†àÌïú ÌíÄ ÏÇ¨Ïù¥Ï¶à Í≥†ÎØºÌïòÍ∏∞ (3) - ÏÇΩÏßàÌé∏]]></title>
        <id>https://hyeonic.github.io/woowacourse/dallog/hikari-cp-3-spadework.html</id>
        <link href="https://hyeonic.github.io/woowacourse/dallog/hikari-cp-3-spadework.html">
        </link>
        <updated>2022-11-01T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[);
        }
        ...
    }
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[OSIVÏôÄ ÏÇ¨Ïö©ÌïòÎ©∞ ÏßÅÎ©¥Ìïú Î¨∏Ï†ú]]></title>
        <id>https://hyeonic.github.io/jpa/basic/osiv.html</id>
        <link href="https://hyeonic.github.io/jpa/basic/osiv.html">
        </link>
        <updated>2022-10-24T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[spring:
    jpa:
        open-in-view: true
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[HikariCPÏôÄ Ï†ÅÏ†àÌïú ÌíÄ ÏÇ¨Ïù¥Ï¶à Í≥†ÎØºÌïòÍ∏∞ (2) - Ïã§Ï†ÑÌé∏]]></title>
        <id>https://hyeonic.github.io/woowacourse/dallog/hikari-cp-2-actual.html</id>
        <link href="https://hyeonic.github.io/woowacourse/dallog/hikari-cp-2-actual.html">
        </link>
        <updated>2022-10-18T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[Î≥¥Îã§ Îçî Ïú†ÏùòÎØ∏Ìïú Ï≤òÎ¶¨ÎüâÏùÑ ÌôïÏù∏ÌïòÍ∏∞ ÏúÑÌï¥ Î∞òÎ≥µ ÌöüÏàò(loop count)ÎèÑ Ï†ÅÏ†àÌûà ÏÑ§Ï†ïÌïúÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[HikariCPÏôÄ Ï†ÅÏ†àÌïú ÌíÄ ÏÇ¨Ïù¥Ï¶à Í≥†ÎØºÌïòÍ∏∞ (1) - Ïù¥Î°†Ìé∏]]></title>
        <id>https://hyeonic.github.io/woowacourse/dallog/hikari-cp-1-theory.html</id>
        <link href="https://hyeonic.github.io/woowacourse/dallog/hikari-cp-1-theory.html">
        </link>
        <updated>2022-10-16T21:00:00.000Z</updated>
        <summary type="html"><![CDATA[...
    private static final long MAX_LIFETIME = MINUTES.toMillis(30);
    ...
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ïª§Î≤ÑÎßÅ Ïù∏Îç±Ïä§]]></title>
        <id>https://hyeonic.github.io/database/basic/covering-index.html</id>
        <link href="https://hyeonic.github.io/database/basic/covering-index.html">
        </link>
        <updated>2022-10-10T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[jdbcTemplateÏùÑ ÎßåÎì§Î©∞ ÎßàÏ£ºÌïú Template Callback Ìå®ÌÑ¥]]></title>
        <id>https://hyeonic.github.io/spring/basic/template-callback.html</id>
        <link href="https://hyeonic.github.io/spring/basic/template-callback.html">
        </link>
        <updated>2022-10-09T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[JdbcTemplateÏùÄ ÏïÑÎûòÏôÄ Í∞ôÏùÄ ÏùºÏùÑ Îã¥ÎãπÌïúÎã§.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[IoC Ïª®ÌÖåÏù¥ÎÑà]]></title>
        <id>https://hyeonic.github.io/spring/basic/ioc-container.html</id>
        <link href="https://hyeonic.github.io/spring/basic/ioc-container.html">
        </link>
        <updated>2022-10-08T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[public User findById(long id) {
        try (final var connection = dataSource.getConnection()) {
            return users.get(id);
        } catch (SQLException e) {
            log.error(e.getMessage());
            return null;
        }
    }
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JDBC]]></title>
        <id>https://hyeonic.github.io/java/jdbc/jdbc.html</id>
        <link href="https://hyeonic.github.io/java/jdbc/jdbc.html">
        </link>
        <updated>2022-10-08T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[@Override
  void setLoginTimeout(int seconds) throws SQLException;]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[cyclic dependency]]></title>
        <id>https://hyeonic.github.io/woowacourse/dallog/cyclic-dependency.html</id>
        <link href="https://hyeonic.github.io/woowacourse/dallog/cyclic-dependency.html">
        </link>
        <updated>2022-09-30T17:00:00.000Z</updated>
        <summary type="html"><![CDATA[...
public class Subscriptions {
    ...
    public Color findColor(final IntegrationSchedule schedule) {
        return subscriptions.stream()
                .filter(schedule::isSameCategory)
                .findAny()
                .orElseThrow(() -> new NoSuchCategoryException("Íµ¨ÎèÖÌïòÏßÄ ÏïäÏùÄ Ïπ¥ÌÖåÍ≥†Î¶¨ ÏûÖÎãàÎã§."))
                .getColor();
    }
    ...
}
`]]></summary>
    </entry>
</feed>