(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{518:function(e,t,c){"use strict";c.r(t);var r=c(21),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[c("h1",{attrs:{id:"checked-exception-unchecked-exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checked-exception-unchecked-exception"}},[e._v("#")]),e._v(" Checked Exception, Unchecked Exception")]),e._v(" "),c("h2",{attrs:{id:"error와-exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#error와-exception"}},[e._v("#")]),e._v(" Error와 Exception")]),e._v(" "),c("h3",{attrs:{id:"error"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[e._v("#")]),e._v(" Error")]),e._v(" "),c("p",[c("code",[e._v("Error")]),e._v("는 시스템 혹은 하드웨어의 오작동으로 인해 발생한다. 이러한 수준의 Error는 심각한 수준의 오류이기 때문에 개발자는 이것을 미리 예측하여 방지할 수 없다.")]),e._v(" "),c("h3",{attrs:{id:"exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#exception"}},[e._v("#")]),e._v(" Exception")]),e._v(" "),c("p",[c("code",[e._v("Exception")]),e._v("은 개발자가 구현한 로직에서 발생한 실수나 사용자의 영향으로 발생한다. Exception은 미리 예측하여 방지할 수 있기 때문에 적절한 예외 처리를 진행해야 한다.")]),e._v(" "),c("p",{attrs:{align:"center"}},[c("img",{attrs:{src:"https://user-images.githubusercontent.com/59357153/144165617-d389bb7c-0a11-47dc-b24a-5aab326a5982.png"}})]),e._v(" "),c("p",[e._v("위 그림은 Java에서 "),c("code",[e._v("Error")]),e._v("와 "),c("code",[e._v("Exception")]),e._v("의 상속 구조이다. "),c("code",[e._v("Trowable")]),e._v("은 최상위 클래스 Object를 상속하고 있다.")]),e._v(" "),c("p",[e._v("이러한 Exception은 크게 "),c("code",[e._v("Checked Exception")]),e._v("과 "),c("code",[e._v("Unchecked Exception")]),e._v("으로 구별할 수 있다. 두 Exception의 구별은 위 그림과 같이 "),c("code",[e._v("Runtime Exception")]),e._v("의 상속 유무를 따라 구별 가능하다.")]),e._v(" "),c("h2",{attrs:{id:"checked-exception-vs-unchecked-exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checked-exception-vs-unchecked-exception"}},[e._v("#")]),e._v(" Checked Exception vs Unchecked Exception")]),e._v(" "),c("h3",{attrs:{id:"checked-exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checked-exception"}},[e._v("#")]),e._v(" Checked Exception")]),e._v(" "),c("ul",[c("li",[c("code",[e._v("처리 여부")]),e._v(": 반드시 예외를 처리해야 한다.")]),e._v(" "),c("li",[c("code",[e._v("확인 시점")]),e._v(": 컴파일 단계에서 확인 가능하다.")]),e._v(" "),c("li",[c("code",[e._v("대표적인 예외")]),e._v(": Exception을 상속 받는 하위 클래스 중 Runtime Exception을 상속하지 않은 예외\n"),c("ul",[c("li",[e._v("IOException")]),e._v(" "),c("li",[e._v("SQLException")]),e._v(" "),c("li",[e._v("...")])])])]),e._v(" "),c("p",[e._v("반드시 명시적으로 예외를 처리해야 한다. "),c("code",[e._v("try-catch")]),e._v("로 예외 처리를 하거나 "),c("code",[e._v("throw")]),e._v(" 로 예외를 발생시킨 메서드로 전달해야 한다.")]),e._v(" "),c("h3",{attrs:{id:"unchecked-exception"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#unchecked-exception"}},[e._v("#")]),e._v(" Unchecked Exception")]),e._v(" "),c("ul",[c("li",[c("code",[e._v("처리 여부")]),e._v(": 예외 처리를 하지 않아도 된다.")]),e._v(" "),c("li",[c("code",[e._v("확인 시점")]),e._v(": 런타임 단계에서 확인 가능하다.")]),e._v(" "),c("li",[c("code",[e._v("대표적인 예외")]),e._v(": Runtime Exception의 하위 클래스\n"),c("ul",[c("li",[e._v("NullPointerException")]),e._v(" "),c("li",[e._v("IllegalArgumentException")]),e._v(" "),c("li",[e._v("...")])])])]),e._v(" "),c("p",[e._v("명시적인 예외 처리를 강제 하지 않는다. "),c("code",[e._v("try-catch")]),e._v("를 활용한 예외 처리, "),c("code",[e._v("throw")]),e._v("로 호출한 메서드로 예외를 던지지 않아도 괜찮다.")]),e._v(" "),c("h2",{attrs:{id:"references"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),c("p",[c("a",{attrs:{href:"https://cheese10yun.github.io/checked-exception/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Checked Exception을 대하는 자세"),c("OutboundLink")],1),c("br"),e._v(" "),c("a",{attrs:{href:"https://toneyparky.tistory.com/40",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java의 Error와 Exception 그리고 예외처리 전략"),c("OutboundLink")],1)]),e._v(" "),c("TagLinks")],1)}),[],!1,null,null,null);t.default=o.exports}}]);