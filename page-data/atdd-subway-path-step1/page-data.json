{"componentChunkName":"component---src-templates-post-jsx","path":"/atdd-subway-path-step1/","result":{"data":{"site":{"siteMetadata":{"title":"나누면 배가 되고"}},"markdownRemark":{"id":"66a7cc25-e3d5-5ae3-b843-1cc5ff745f90","excerpt":"목표  우아한테크코스에서 진행한 미션의 리뷰와 피드백에 대해 정리한다. 실제 리뷰는 [Spring 경로 조회 - 1단계] 매트(최기현) 미션 제출합니다.에서 확인할 수 있다. 05. 사전 준비, 1단계 - 지하철 경로 조회 확인 이번 지하철 경로 조회에서는 레거시 코드를 기반으로 추가되는 요구사항에 대응하며 변경에 유연한 구조로 설계하는 경험을 진행한다.…","html":"<h2>목표</h2>\n<p><img src=\"https://user-images.githubusercontent.com/59357153/152970395-a31c8134-fc89-449f-b4dc-441e03df929c.png\"></p>\n<p>우아한테크코스에서 진행한 미션의 리뷰와 피드백에 대해 정리한다. 실제 리뷰는 <a href=\"https://github.com/woowacourse/atdd-subway-path/pull/209\">[Spring 경로 조회 - 1단계] 매트(최기현) 미션 제출합니다.</a>에서 확인할 수 있다.</p>\n<h2>05. 사전 준비, 1단계 - 지하철 경로 조회 확인</h2>\n<p>이번 지하철 경로 조회에서는 레거시 코드를 기반으로 추가되는 요구사항에 대응하며 변경에 유연한 구조로 설계하는 경험을 진행한다. 또한 다양한 웹 애플리케이션 아키텍처에 대해 알아보며 적절한 방안을 택해 적용한다. </p>\n<p>이번 미션에서는 기존 지하철 노선도 코드를 기반으로 최단 경로에 대한 기능을 추가한다. 최단 경로를 구하는 방법으로는 외부 라이브러리인 <code class=\"language-text\">jgrapht 라이브러리</code>를 활용하는 것이 요구 조건에 추가되었다.</p>\n<h2>학습 테스트</h2>\n<p>앞서 언급한 것 처럼 외부 라이브러리인 jgrapht를 활용하여 최단 경로를 조회해야 한다. 처음 사용해보는 라이브러리이기 때문에 공식 문서와 예시들을 기반으로 간단한 학습 테스트를 진행하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JgraphtTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"지하철역을 기반으로 최단 경로를 확인한다.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getDijkstraShortestPathWithStation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">WeightedMultigraph</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Station</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DefaultWeightedEdge</span><span class=\"token punctuation\">></span></span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeightedMultigraph</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultWeightedEdge</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Station</span> 낙성대역 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Station</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"낙성대역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Station</span> 신림역 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Station</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"신림역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Station</span> 신대방역 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Station</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"신대방역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Station</span> 신도림역 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Station</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"신도림역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>낙성대역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>신림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>신대방역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>신도림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setEdgeWeight</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>낙성대역<span class=\"token punctuation\">,</span> 신림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setEdgeWeight</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>신림역<span class=\"token punctuation\">,</span> 신대방역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setEdgeWeight</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>신대방역<span class=\"token punctuation\">,</span> 신도림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setEdgeWeight</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>낙성대역<span class=\"token punctuation\">,</span> 신도림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">DijkstraShortestPath</span> dijkstraShortestPath <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DijkstraShortestPath</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">GraphPath</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Station</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DefaultWeightedEdge</span><span class=\"token punctuation\">></span></span> shortestPath <span class=\"token operator\">=</span> dijkstraShortestPath<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span>낙성대역<span class=\"token punctuation\">,</span> 신도림역<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Station</span><span class=\"token punctuation\">></span></span> vertexes <span class=\"token operator\">=</span> shortestPath<span class=\"token punctuation\">.</span><span class=\"token function\">getVertexList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">assertAll</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>vertexes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>shortestPath<span class=\"token punctuation\">.</span><span class=\"token function\">getWeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>덕분에 페어와 함께 빠르게 사용법에 대해 익힐 수 있었다. 또한 라이브러리에서 다양한 기능들을 제공해주었기 때문에 요구사항 달성이 생각보다 어렵지 않게 느껴졌다. 역시 잘 만들어진 것을 사용하는 것도 좋은 해결책이 될 수 있다는 생각이 들었다.</p>\n<h2>식별자를 가진 객체의 동등성 비교</h2>\n<p>이번 미션을 해결하며 대부분의 도메인 객체 들이 식별자인 Id를 가지도록 작성하였다. 이러한 객체들의 동등성 비교를 위해서 Id를 포함한 모든 객체들을 비교하여 작성하였다. 아래는 실제 적용한 예시입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Section</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Line</span> line<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Station</span> upStation<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Station</span> downStation<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> distance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">Section</span> section <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Section</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> distance <span class=\"token operator\">==</span> section<span class=\"token punctuation\">.</span>distance <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span>\n                section<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>upStation<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">.</span>upStation<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>\n                downStation<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">.</span>downStation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">,</span> upStation<span class=\"token punctuation\">,</span> downStation<span class=\"token punctuation\">,</span> distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이러한 선택을 한 이유는 필드가 가변인 변수를 포함하기 때문이다. 즉 도메인 필드가 변할 우려가 있기 때문에 모든 필드가 동일해야 같은 객체를 보장한다고 생각했다. 하지만 이렇게 되면 유일한 식별자인 id의 특징이 모호 해질 것 같다고 생각된다.</p>\n<p>추가적으로 현재 해당 도메인을 실제 DB에 영속 시켜야만 id 값을 가져올 수 있다. 만약 영속되지 않은 객체와 비교해야 할 때 id는 null로 비교가 불가능할 것 같은데 이럴 땐 Id를 제외한 나머지로 동등성을 판단해야 할까? 관련하여 리뷰어에게 질문을 드렸다.</p>\n<h4>리뷰 중 일부</h4>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token code-snippet code keyword\">`리뷰어`</span>: 현재 도메인에서는 식별자가 없다면 동등성을 보장할 수 없을 것 같아요 😓</code></pre></div>\n<p>사실 이에 대한 생각은 이전 미션에서 어느정도 정리할 수 있었다. 다시 한번 언급하면 아래와 같다.</p>\n<blockquote>\n<p>대한민국에 사는 국민이라면 유일한 식별자 번호인 <code class=\"language-text\">주민번호</code>를 가지고 있을 것이다. 내 이름이 <code class=\"language-text\">매트</code>에서 <code class=\"language-text\">패트</code>로 변경되어도 <code class=\"language-text\">주민번호라는 식별자</code>는 변하지 않기 때문에 유일한 객체임을 보장한다. 이것은 단순히 유일함을 나타내는 필드일 뿐 DB에 의존하고 있다는 것을 내포하지 않는다. 즉 도메인에서 활용하는 식별자는 비즈니스 로직의 요구사항의 일부분 이기 때문에 충분히 활용될 수 있을 것이다.</p>\n</blockquote>\n<h2>읽기 좋은 테스트</h2>\n<p>이번에 인수 테스트를 작성할 때 좀 더 읽기 좋은 문서화를 위해 테스트에서 사용하는 변수명은 한글로 작성하였다. <code class=\"language-text\">인수 테스트</code>의 경우는 다른 의사소통 집단과의 시나리오를 기반으로 진행하기 때문에 좀 더 읽기 좋은 테스트 코드를 작성해야 한다. 한글로 작성하게 된다면 Java 언어를 모르는 사람도 쉽게 읽을 수 있을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"경로 관련 기능\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PathAcceptanceTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AcceptanceTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"경로 조회\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@TestFactory</span>\n    <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DynamicTest</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">dynamicTestFromPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Long</span> 건대입구역 <span class=\"token operator\">=</span> <span class=\"token function\">generateStationId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"건대입구역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Long</span> 강남구청역 <span class=\"token operator\">=</span> <span class=\"token function\">generateStationId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"강남구청역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Long</span> 대림역 <span class=\"token operator\">=</span> <span class=\"token function\">generateStationId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"대림역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Long</span> 낙성대역 <span class=\"token operator\">=</span> <span class=\"token function\">generateStationId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"낙성대역\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Long</span> line7 <span class=\"token operator\">=</span> <span class=\"token function\">generateLineId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"7호선\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"deep green\"</span><span class=\"token punctuation\">,</span> 건대입구역<span class=\"token punctuation\">,</span> 강남구청역<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">addSection</span><span class=\"token punctuation\">(</span>line7<span class=\"token punctuation\">,</span> 강남구청역<span class=\"token punctuation\">,</span> 대림역<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Long</span> line2 <span class=\"token operator\">=</span> <span class=\"token function\">generateLineId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2호선\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span> 건대입구역<span class=\"token punctuation\">,</span> 낙성대역<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">addSection</span><span class=\"token punctuation\">(</span>line2<span class=\"token punctuation\">,</span> 낙성대역<span class=\"token punctuation\">,</span> 대림역<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>리뷰 중 일부</h4>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token code-snippet code keyword\">`리뷰어`</span>: 읽기 좋은 테스트 👍 Station이 아닌 Long 타입이니 변수명에 아이디임을 나타내도 좋겠네요!</code></pre></div>\n<h2>to be continue...</h2>\n<h4>리뷰 중 일부</h4>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token code-snippet code keyword\">`리뷰어`</span>: 도메인에서 특정 라이브러리에 의존하게 된다면 어떤 문제가 있을까요? 또 문제를 해결하기 위해 어떤 방법이 있을지 고민해보면 좋을 것 같습니다 :)</code></pre></div>\n<p>언급하신 것 처럼 도메인이 특정 라이브러리에 의존하게 되면 외부 라이브러리의 변경에 도메인이 매우 취약한 구조가 된다고 생각한다. 이것은 다음 미션을 진행하며 개선된 사항들을 정리하려 한다.</p>\n<h2>References.</h2>\n<ul>\n<li><a href=\"https://jgrapht.org/\">jgrapht</a></li>\n</ul>","frontmatter":{"title":"[레벨 2] 05. 사전 준비, 1단계 - 지하철 경로 조회","date":"May 31, 2022","update":"May 31, 2022","tags":["우아한테크코스","레벨2","미션"],"series":"우아한테크코스 레벨2"},"fields":{"slug":"/atdd-subway-path-step1/","readingTime":{"minutes":8.44}}},"seriesList":{"edges":[{"node":{"id":"d4b6d632-cd5f-543f-a9a6-db1995b81aab","fields":{"slug":"/jwp-chess-step1/"},"frontmatter":{"title":"[레벨 2] 01. 사전 준비, 1단계 - 웹 체스"}}},{"node":{"id":"85419abc-c066-522b-b67a-b4f7adec2719","fields":{"slug":"/jwp-chess-step2/"},"frontmatter":{"title":"[레벨 2] 02. 2단계 - 웹 체스"}}},{"node":{"id":"0187b675-7a80-5588-94d9-a7bb02396071","fields":{"slug":"/atdd-subway-map-step1/"},"frontmatter":{"title":"[레벨 2] 03. 1, 2단계 - 지하철 노선도"}}},{"node":{"id":"1a3b11fe-a700-5797-acf9-f821623d6b81","fields":{"slug":"/atdd-subway-map-step2/"},"frontmatter":{"title":"[레벨 2] 04. 3단계 - 지하철 노선도"}}},{"node":{"id":"66a7cc25-e3d5-5ae3-b843-1cc5ff745f90","fields":{"slug":"/atdd-subway-path-step1/"},"frontmatter":{"title":"[레벨 2] 05. 사전 준비, 1단계 - 지하철 경로 조회"}}},{"node":{"id":"46405f9c-f765-5897-b294-99ac7b74b9bf","fields":{"slug":"/atdd-subway-path-step2/"},"frontmatter":{"title":"[레벨 2] 06. 2단계 - 지하철 경로 조회"}}},{"node":{"id":"bdeb9ce6-d9ab-5297-9e94-91374bfa86db","fields":{"slug":"/jwp-shopping-cart-step1/"},"frontmatter":{"title":"[레벨 2] 07. 1단계 - 장바구니 - 협업 미션"}}},{"node":{"id":"5b94303c-ab34-5ec1-ac86-5ef82deff412","fields":{"slug":"/jwp-shopping-cart-step2/"},"frontmatter":{"title":"[레벨 2] 08. 2단계 - 장바구니/주문 API 변경하기"}}}]},"previous":{"fields":{"slug":"/spring-jdbc-batch/"},"frontmatter":{"title":"Spring JDBC로 batch 활용하기"}},"next":{"fields":{"slug":"/atdd-subway-path-step2/"},"frontmatter":{"title":"[레벨 2] 06. 2단계 - 지하철 경로 조회"}}},"pageContext":{"id":"66a7cc25-e3d5-5ae3-b843-1cc5ff745f90","series":"우아한테크코스 레벨2","previousPostId":"b77737b7-c888-54d0-8901-9921b4bbb703","nextPostId":"46405f9c-f765-5897-b294-99ac7b74b9bf"}},"staticQueryHashes":[],"slicesMap":{}}