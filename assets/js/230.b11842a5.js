(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{706:function(t,s,e){"use strict";e.r(s);var a=e(21),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"consumes-vs-produces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consumes-vs-produces"}},[t._v("#")]),t._v(" consumes vs produces")]),t._v(" "),e("CenterImage",{attrs:{"image-src":"https://user-images.githubusercontent.com/59357153/152970395-a31c8134-fc89-449f-b4dc-441e03df929c.png"}}),t._v(" "),e("h2",{attrs:{id:"consumes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consumes"}},[t._v("#")]),t._v(" consumes")]),t._v(" "),e("p",[t._v("다음 예에서 볼 수 있듯이 "),e("code",[t._v("consumes")]),t._v(" 속성을 활용하면 요청의 "),e("code",[t._v("Content-Type")]),t._v(" 기준으로 요청 매핑을 좁힐 수 있다.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/pets"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" consumes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pet")]),t._v(" pet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("또한 "),e("code",[t._v("consumes")]),t._v(" 속성은 부정 표현식을 지원한다. "),e("code",[t._v("!text/plain")]),t._v("은 "),e("code",[t._v("text/plain")]),t._v(" 이외의 모든 컨텐츠 유형을 제공한다.")]),t._v(" "),e("h2",{attrs:{id:"produces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#produces"}},[t._v("#")]),t._v(" produces")]),t._v(" "),e("p",[t._v("다음 예에서 볼 수 있듯이 컨트롤러 메서드가 반환하는 타입을 강제한다.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/pets/{petId}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" produces "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MediaType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("APPLICATION_JSON_VALUE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ResponseBody")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" petId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("위 메서드는 이제 "),e("code",[t._v("application/json")]),t._v(" 형태로만 반환이 가능하다. 보내야 하는 타입이 정해져 있다면 "),e("code",[t._v("produces")]),t._v(" 속성을 활용한다.")]),t._v(" "),e("p",[t._v("만약 클라이언트 입장에서 특정 타입의 데이터만 원한하면 HTTP 요청 메시지에 "),e("code",[t._v("Accept")]),t._v("를 활용하여 전달할 수 있다.")]),t._v(" "),e("h2",{attrs:{id:"content-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#content-type"}},[t._v("#")]),t._v(" Content-Type")]),t._v(" "),e("p",[t._v("HTTP 메시지에 담겨 보내는 메시지 형식을 알려주기 위한 헤더이다. 대부분의 HTTP 표준 스펙을 따르는 브라우저와 웹 서버는 우선적으로 "),e("code",[t._v("Content-Type")]),t._v(" 헤더를 기준으로 HTTP 메시지에 담긴 데이터를 분석하고 파싱한다.")]),t._v(" "),e("h2",{attrs:{id:"accept-헤더"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accept-헤더"}},[t._v("#")]),t._v(" Accept 헤더")]),t._v(" "),e("p",[t._v("Accept 헤더는 클라이언트에서 웹 서버로 요청 시 요청 메시지에 담기는 헤더이다. 즉 클라이언트 자신에게 이러한 데이터 타입만 허용하겠다는 의미이다. 만약 Accept 헤더 값에 "),e("code",[t._v("application/json")]),t._v("을 설정한다면 웹서버에게 json 데이터만 처리할 수 있다고 어필하는 것과 같다.")]),t._v(" "),e("h2",{attrs:{id:"정리"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),e("p",[e("code",[t._v("consumes")]),t._v("는 클라이언트가 서버에게 보내는 타입을 명시한다. "),e("code",[t._v("produces")]),t._v("는 서버가 클라이언트에게 반환하는 데이터 타입을 명시한다.")]),t._v(" "),e("p",[t._v("이러한 속성을 명시적으로 사용하면 Mapping할 때 받고 싶은 데이터를 강제할 수 있으므로 오류 상황을 줄일 수 있다.")]),t._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mungto.tistory.com/438",target:"_blank",rel:"noopener noreferrer"}},[t._v("[Spring] consumes와 produces의 차이"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://dololak.tistory.com/630",target:"_blank",rel:"noopener noreferrer"}},[t._v("[HTTP] HTTP 헤더 중 Content-Type 헤더와 Accept 헤더의 용도와 차이점"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-consumes",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-consumes"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-produces",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-produces"),e("OutboundLink")],1)]),t._v(" "),e("TagLinks")],1)}),[],!1,null,null,null);s.default=n.exports}}]);